gcloud compute networks create privatenet --subnet-mode=custom


gcloud compute networks subnets create privatesubnet-us --network=privatenet --region=us-central1 --range=172.16.0.0/24

gcloud compute networks subnets create privatesubnet-eu --network=privatenet --region=europe-central2 --range=172.20.0.0/20

gcloud compute networks subnets list --sort-by=NETWORK

gcloud compute networks list

gcloud compute --project=qwiklabs-gcp-01-8c7828b8b4b1 firewall-rules create managementnet-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=managementnet --action=ALLOW --rules=tcp:22,tcp:3389,icmp --source-ranges=0.0.0.0/0

gcloud compute firewall-rules create privatenet-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=privatenet --action=ALLOW --rules=icmp,tcp:22,tcp:3389 --source-ranges=0.0.0.0/0

gcloud compute firewall-rules list --sort-by=NETWORK

gcloud compute instances create privatenet-us-vm --zone=us-central1-c --machine-type=f1-micro --subnet=privatesubnet-us --image-family=debian-10 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=privatenet-us-vm

gcloud compute instances list --sort-by=ZONE

gcloud compute ssh vm-internal --zone us-central1-c --tunnel-through-iap


gcloud container clusters create $my_cluster --num-nodes 3 --zone $my_zone --enable-ip-alias

gcloud container clusters resize $my_cluster --zone $my_zone --num-nodes=4

gcloud container clusters get-credentials $my_cluster --zone $my_zone

nano ~/.kube/config

kubectl cluster-info

kubectl config current-context

kubectl config get-contexts

kubectl config use-context gke_${GOOGLE_CLOUD_PROJECT}_us-central1-a_standard-cluster-1

kubectl top nodes

source <(kubectl completion bash)

kubectl create deployment --image nginx nginx-1

kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html

kubectl expose pod $my_nginx_pod --port 80 --type LoadBalancer
