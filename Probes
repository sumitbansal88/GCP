A Pod definition file called exec-liveness.yaml has been provided for you that defines a simple container called liveness running Busybox and a liveness 
probe that uses the cat command against the file /tmp/healthy within the container to test for liveness every 5 seconds. 
The startup script for the liveness container creates the /tmp/healthy on startup and then deletes it 
30 seconds later to simulate an outage that the Liveness probe can detect.

apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-exec
spec:
  containers:
  - name: liveness
    image: k8s.gcr.io/busybox
    args:
    - /bin/sh
    - -c
    - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
    livenessProbe:
      exec:
        command:
        - cat
        - /tmp/healthy
      initialDelaySeconds: 5
      periodSeconds: 5
      
      At the bottom of the output, there are messages indicating that the liveness probes have failed, and the containers have been killed and recreated.
      
      
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    test: readiness
  name: readiness-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: readiness-test
  template:
    metadata:
      labels:
        app: readiness-test
    spec:
      containers:
      - name: readiness
        image: gcr.io/google-samples/hello-app:1.0
        ports:
        - containerPort: 8080
          protocol: TCP
        args:
        - /bin/sh
        - -c
        - sleep 30; nohup ./hello-app &2>/dev/null & touch /tmp/healthy; export xx=$((60+$RANDOM % 120)) ; sleep $xx ;  rm -rf /tmp/healthy
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          
apiVersion: v1
kind: Service
metadata:
  name: readiness-svc
spec:
  type: LoadBalancer
  selector:
    app: readiness-test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080          
