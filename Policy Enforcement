apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restricted-psp
spec:
  privileged: false  # Don't allow privileged pods!
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: MustRunAsNonRoot
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'


kubectl apply -f restricted-psp.yaml

kubectl get podsecuritypolicy restricted-psp


kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: restricted-pods-role
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - restricted-psp
  verbs:
  - use

export USERNAME_1_EMAIL=$(gcloud info --format='value(config.account)')

kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user $USERNAME_1_EMAIL

kubectl apply -f restricted-pods-role.yaml


kubectl get clusterrole restricted-pods-role


gcloud beta container clusters update $my_cluster --zone $my_zone --enable-pod-security-policy


kubectl get podsecuritypolicies

kubectl auth can-i use podsecuritypolicy/gce.privileged

kind: Pod
apiVersion: v1
metadata:
  name: privileged-pod
spec:
  containers:
    - name: privileged-pod
      image: nginx
      securityContext:
        privileged: true


kubectl apply -f privileged-pod.yaml


